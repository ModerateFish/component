apply plugin: 'java'
apply plugin: 'maven'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.auto:auto-common:0.6'
    compile 'com.google.auto.service:auto-service:1.0-rc2'
    compile 'com.squareup:javapoet:1.7.0'

    sourceCompatibility = "1.7"
    targetCompatibility = "1.7"
}

ext {
    GROUP_ID = 'com.thornbirds'
    ARTIFACT_ID = 'component'
    VERSION = '1.0.0'
}

def siteUrl = 'https://github.com/ModerateFish/component'         // project homepage
def gitUrl = 'https://github.com/ModerateFish/component.git'      // project git url
def issueUrl = 'https://github.com/ModerateFish/component/issues' // project issue url

// generate javadoc and jar
install {
    repositories.mavenInstaller {
        // generates POM.xml with proper parameters
        pom.project {
            packaging 'jar'
            name 'Component Library'                              // project title
            url siteUrl
            // Set your license
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id 'moderatefish'                             // your user id (you can write your nickname)
                    name 'yangli'                                 // your user name
                    email 'yanglijd@gmail.com'                    // your email
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title "swipeJavaDoc"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(properties.getProperty('mvn.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.GROUP_ID
            artifactId project.ARTIFACT_ID
            version project.VERSION
        }
    }
}

////bintray upload
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = "component"                                        // project name in jcenter
//        desc = 'A helpful library named Component.'
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        issueTrackerUrl = issueUrl
//        licenses = ["Apache-2.0"]
//        labels = ['java']
//        publish = true
//        publicDownloadNumbers = true
//    }
//}
