apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title "swipeJavaDoc"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

ext {
    GROUP_ID = project.ext.mvnGroudID
    VERSION = project.ext.versionName
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def deployPath = properties.getProperty('mvn.deployPath')
if (deployPath != null) {
    uploadArchives {
        repositories.mavenDeployer {
            repository(url: "file://$deployPath")
            pom.project {
                groupId project.GROUP_ID
                artifactId project.ARTIFACT_ID
                version project.VERSION
            }
            pom.whenConfigured { pom ->
                pom.dependencies.forEach { dep ->
                    // 处理生成的pom中project方式的依赖group_id和version不对
                    if (dep.getVersion() == "unspecified") {
                        dep.setGroupId(project.GROUP_ID)
                        dep.setVersion(project.VERSION)
                    }
                }
            }
        }
    }.dependsOn(build)
}