apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

// custom tasks for creating source/javadoc jars
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("build/docs/javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Creating sources with comments
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

// Put the androidSources and javadoc to the artifacts
artifacts {
    archives androidSourcesJar
    archives javadocJar
}

ext {
    GROUP_ID = rootProject.ext.mvnGroudID
    VERSION = rootProject.ext.versionName
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(properties.getProperty('mvn.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.GROUP_ID
            artifactId project.ARTIFACT_ID
            version project.VERSION
        }
    }
}.dependsOn(build)

//afterEvaluate {
//    // 解决javadoc找不到依赖库中的类
//    javadoc.classpath += files(android.libraryVariants.collect { variant ->
//        variant.getJavaCompileProvider().get().classpath.files
//    })
//}


//def siteUrl = 'https://github.com/ModerateFish/component'         // project homepage
//def gitUrl = 'https://github.com/ModerateFish/component.git'      // project git url
//def issueUrl = 'https://github.com/ModerateFish/component/issues' // project issue url
//
//// generate javadoc and jar
//install {
//    repositories.mavenInstaller {
//        // generates POM.xml with proper parameters
//        pom.project {
//            packaging 'jar'
//            name 'Component Library'                              // project title
//            url siteUrl
//            // Set your license
//            licenses {
//                license {
//                    name 'The Apache Software License, Version 2.0'
//                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                }
//            }
//            developers {
//                developer {
//                    id 'moderatefish'          // your user id (you can write your nickname)
//                    name 'biglee'              // your user name
//                    email 'yanglijd@gmail.com' // your email
//                }
//            }
//            scm {
//                connection gitUrl
//                developerConnection gitUrl
//                url siteUrl
//            }
//        }
//    }
//}
